import React, {useEffect, useContext, useState} from 'react';
import { Link, Redirect } from "react-router-dom";

import useFetch from 'hooks/useFetch';
import Loading from 'components/loading';
import ErrorMessage from 'components/errorMessage';
import TagList from 'components/tagList';
import { CurrentUserContext } from 'contexts/currentUser';

const Article = ({ match }) => {
    const slug = match.params.slug;
    const apiUrl = `/articles/${slug}`;
    const [
        {
            response: fetchArticleRes,
            error: fetchArticleError,
            isLoading: fetchArticleIsLoading
        },
        doFetch
    ] = useFetch(apiUrl);
    const [{response: deleteArticleRes}, doDeleteArticle] = useFetch(apiUrl);
    const [currentUserState] = useContext(CurrentUserContext);
    const [isSuccessfulDelete, setIsSuccessfulDelete] = useState(false);

    const isAuthor = () => {
        if (!fetchArticleRes || !currentUserState.isLoggedIn) return false;

        return fetchArticleRes.article.author.username === currentUserState.currentUser.username;
    };

    useEffect(() => {
        doFetch();
    }, [doFetch])

    useEffect(() => {
        if (!deleteArticleRes) return;

        setIsSuccessfulDelete(true);
    }, [deleteArticleRes]);

    const deleteArticle = () => {
        doDeleteArticle({
           method: 'delete'
        });
    };

    if (isSuccessfulDelete) return <Redirect to={'/'} />

    return (
        <div className="article-page">
            <div className="banner">
                { !fetchArticleIsLoading && fetchArticleRes && (
                    <div className="container">
                        <h1>{ fetchArticleRes.article.title }</h1>
                        <div className="article-meta">
                            <Link
                                to={`/profiles/${fetchArticleRes.article.author.username}`}
                            >
                                <img src={fetchArticleRes.article.author.image} alt=""/>
                            </Link>
                            <div className="info">
                                <Link
                                    to={`/profiles/${fetchArticleRes.article.author.username}`}
                                >
                                    { fetchArticleRes.article.author.username }
                                </Link>
                                <span className="date">{ fetchArticleRes.article.createdAt }</span>
                            </div>
                            { isAuthor() && (
                                <span>
                                    <Link
                                        className="btn btn-outline-warning btn-sm"
                                        to={`/articles/${fetchArticleRes.article.slug}/edit`}
                                    >
                                        <i className="ion-edit" />{' '}
                                        Edit Article
                                    </Link>
                                    <button
                                        className="btn btn-outline-danger btn-sm"
                                        type="button"
                                        onClick={deleteArticle}
                                    >
                                        <i className="ion-trash-a" />{' '}
                                        Delete Article
                                    </button>
                                </span>
                            ) }
                        </div>
                    </div>
                ) }
            </div>
            <div className="container page">
                { fetchArticleIsLoading && <Loading /> }
                { fetchArticleError && <ErrorMessage /> }
                { !fetchArticleIsLoading && fetchArticleRes && (
                    <div className="row article-content">
                        <div className="col-xs-12">
                            <div>
                                <p>{ fetchArticleRes.article.body }</p>
                            </div>
                            <TagList tags={fetchArticleRes.article.tagList} />
                        </div>
                    </div>
                ) }
            </div>
        </div>
    );
};

export default Article;
